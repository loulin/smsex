{"version":3,"sources":["smsex.js"],"names":[],"mappings":";;;;;;;;IAAO,QAAQ,2BAAM,UAAU;;IACxB,CAAC,2BAAM,QAAQ;;IAEhB,GAAG;AACI,WADP,GAAG;0BAAH,GAAG;;AAEL,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAC9B,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;GAC9B;;uBANG,GAAG;AAQP,OAAG;aAAA,aAAC,IAAI,EAAE,QAAQ,EAAE;AAClB,YAAI,CAAC,QAAQ,EAAE;AACb,kBAAQ,GAAG,IAAI,CAAC;AAChB,cAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;SACtB;;AAED,YAAI,CAAC,IAAI,EAAE;AACT,gBAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAClD;;AAED,YAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACpB,cAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACjC,cAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;;AAED,YAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;AACjC,eAAO,IAAI,CAAC;OACb;;;;AAED,YAAQ;aAAA,kBAAC,IAAI,EAAE,OAAO,EAAE;AACtB,YAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACpB,cAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB,MAAM;AACL,cAAI,CAAC,OAAO,EAAE;AACZ,kBAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;WAC5D;;AAED,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACpB,gBAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;AACjC,gBAAI,CAAC,UAAU,GAAG,EAAE,CAAC;WACtB;;AAED,cAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;SACjC;OACF;;;;AAED,QAAI;aAAA,cAAC,OAAO,EAAuB;YAArB,QAAQ,gCAAG,YAAM,EAAE;AAC/B,YAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC/C,iBAAO,GAAG;AACR,cAAE,EAAE,OAAO;AACX,gBAAI,EAAE,QAAQ;WACf,CAAC;;AAEF,kBAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,YAAM,EAAE,CAAC;SACjE;;AAED,YAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACxB,gBAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;;AAED,YAAI,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AAC3B,gBAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;;AAED,YAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;AAChC,gBAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;;AAED,YAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACpB,gBAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;SAChC;;AAED,YAAI,OAAO,GAAG,IAAI,CAAC;;AAEnB,YAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAC5B,iBAAO,GAAG,OAAO,CAAC,IAAI,CAAC;SACxB,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACnC,cAAI,CAAC,IAAI,CAAC,UAAU,EAAE;AACpB,kBAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;WACjC;;AAED,cAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;;AAE7F,iBAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;SACnD,MAAM;AACL,gBAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;SAC1D;;AAED,YAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;;AAE5F,gBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;OAC9D;;;;;;SAzFG,GAAG;;;iBA4FM,IAAI,GAAG,EAAE","file":"smsex.js","sourcesContent":["import Mustache from 'mustache';\nimport _ from 'lodash';\n\nclass SMS {\n  constructor() {\n    this._templates = null;\n    this._defaultTemplates = null;\n    this._providers = null;\n    this._defaultProvider = null;\n  }\n\n  use(name, provider) {\n    if (!provider) {\n      provider = name;\n      name = provider.name;\n    }\n\n    if (!name) {\n      throw new Error('SMS provider must have a name');\n    }\n\n    if (!this._providers) {\n      this._defaultProvider = provider;\n      this._providers = {};\n    }\n\n    this._providers[name] = provider;\n    return this;\n  }\n\n  template(name, content) {\n    if (_.isObject(name)) {\n      this._templates = name;\n    } else {\n      if (!content) {\n        throw new Error('SMS template must have name and content');\n      }\n\n      if (!this._templates) {\n        this._defaultTemplates = content;\n        this._templates = {};\n      }\n\n      this._templates[name] = content;\n    }\n  }\n\n  send(options, callback = () => {}) {\n    if (_.isString(options) && _.isString(callback)) {\n      options = {\n        to: options,\n        body: callback\n      };\n\n      callback = arguments[2] !== undefined ? arguments[2] : () => {};\n    }\n\n    if (!_.isObject(options)) {\n      throw new Error('options must be object');\n    }\n\n    if (!_.isFunction(callback)) {\n      throw new Error('callback must be function');\n    }\n\n    if (!options.to || !options.body) {\n      throw new Error('Send to or message body missing');\n    }\n\n    if (!this._providers) {\n      throw new Error('No provider');\n    }\n\n    let content = null;\n\n    if (_.isString(options.body)) {\n      content = options.body;\n    } else if (_.isObject(options.body)) {\n      if (!this._templates) {\n        throw new Error('No templates');\n      }\n\n      let template = options.template ? this._templates[options.template] : this._defaultTemplates;\n\n      content = Mustache.render(template, options.body);\n    } else {\n      throw new Error('Message body must be string or object');\n    }\n\n    let provider = options.provider ? this._providers[options.provider] : this._defaultProvider;\n\n    provider.send(options.to, content, options.params, callback);\n  }\n}\n\nexport default new SMS();"],"sourceRoot":"/source/"}